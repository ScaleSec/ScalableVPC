---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates a VPC up to 3 AZs x 3 layers, based on parameters.
Parameters:
  VpcCidr:
    Description: CIDR block for the VPC
    Type: String
    Default: 10.0.0.0/16
  VpcId:
    Type: String
    Description: Optional - VPC Id of existing VPC. Leave blank to create a new VPC.
    Default: ''
    AllowedPattern: "^(?:vpc-[0-9a-f]{8}|)$"
    ConstraintDescription: VPC ID must begin with 'vpc-' or leave blank to have a
      new VPC created.
  PubSubAz1Cidr:
    Description: CIDR block for the public subnet in AZ1. Required if you don't specify
      an existing VPC.
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 10.0.32.0/20
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IPv4 CIDR formatted as x.x.x.x/x.
  PubSubAz2Cidr:
    Description: "(optional) CIDR block for the public subnet in AZ2. This parameter
      determines whether AZ2 is used."
    Type: String
    MinLength: 0
    MaxLength: 18
    Default: 10.0.96.0/20
    AllowedPattern: "^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|$"
    ConstraintDescription: Must be a valid IPv4 CIDR formatted as x.x.x.x/x.
  PubSubAz3Cidr:
    Description: "(optional) CIDR block for the public subnet in AZ3. This parameter
      determines whether AZ3 is used."
    Type: String
    MinLength: 0
    MaxLength: 18
    Default: 10.0.160.0/20
    AllowedPattern: "^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|$"
    ConstraintDescription: Must be a valid IPv4 CIDR formatted as x.x.x.x/x.
  PrivSubTier1Az1Cidr:
    Description: "(optional) CIDR block for the first tier private subnet in AZ1."
    Type: String
    MinLength: 0
    MaxLength: 18
    Default: 10.0.0.0/19
    AllowedPattern: "^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|$"
    ConstraintDescription: Must be a valid IPv4 CIDR formatted as x.x.x.x/x.
  PrivSubTier1Az2Cidr:
    Description: "(optional) CIDR block for the first tier private subnet in AZ2.
      Used only if you specified a CIDR for the Public Subnet in AZ2."
    Type: String
    MinLength: 0
    MaxLength: 18
    Default: 10.0.64.0/19
    AllowedPattern: "^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|$"
    ConstraintDescription: Must be a valid IPv4 CIDR formatted as x.x.x.x/x.
  PrivSubTier1Az3Cidr:
    Description: "(optional) CIDR block for the first tier private subnet in AZ3.
      Used only if you specified a CIDR for the Public Subnet in AZ3."
    Type: String
    MinLength: 0
    MaxLength: 18
    Default: 10.0.128.0/19
    AllowedPattern: "^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|$"
    ConstraintDescription: Must be a valid IPv4 CIDR formatted as x.x.x.x/x.
  PrivSubTier2Az1Cidr:
    Description: "(optional) CIDR block for the second tier private subnet in AZ1."
    Type: String
    MinLength: 0
    MaxLength: 18
    Default: 10.0.48.0/21
    AllowedPattern: "^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|$"
    ConstraintDescription: Must be a valid IPv4 CIDR formatted as x.x.x.x/x.
  PrivSubTier2Az2Cidr:
    Description: "(optional) CIDR block for the second tier private subnet in AZ2.
      Used only if you created a public subnet in AZ2."
    Type: String
    MinLength: 0
    MaxLength: 18
    Default: 10.0.112.0/21
    AllowedPattern: "^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|$"
    ConstraintDescription: Must be a valid IPv4 CIDR formatted as x.x.x.x/x.
  PrivSubTier2Az3Cidr:
    Description: "(optional) CIDR block for the second tier private subnet in AZ3.
      Used only if you created a public subnet in AZ3."
    Type: String
    MinLength: 0
    MaxLength: 18
    Default: 10.0.176.0/21
    AllowedPattern: "^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})|$"
    ConstraintDescription: Must be a valid IPv4 CIDR formatted as x.x.x.x/x.
  ConnectToInternet:
    Description: Set to false if this VPC should not be connected to the Internet
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'
Conditions:
  CreateVpcResources:
    Fn::Equals:
    - Ref: VpcId
    - ''
  CreatePubSubAz2:
    Fn::And:
    - Condition: CreateVpcResources
    - Fn::Not:
      - Fn::Equals:
        - Ref: PubSubAz2Cidr
        - ''
  CreatePubSubAz3:
    Fn::And:
    - Condition: CreatePubSubAz2
    - Fn::Not:
      - Fn::Equals:
        - Ref: PubSubAz3Cidr
        - ''
  CreatePrivSubTier1Az1:
    Fn::And:
    - Condition: CreateVpcResources
    - Fn::Not:
      - Fn::Equals:
        - Ref: PrivSubTier1Az1Cidr
        - ''
  CreatePrivSubTier1Az2:
    Fn::And:
    - Condition: CreatePrivSubTier1Az1
    - Condition: CreatePubSubAz2
    - Fn::Not:
      - Fn::Equals:
        - Ref: PrivSubTier1Az2Cidr
        - ''
  CreatePrivSubTier1Az3:
    Fn::And:
    - Condition: CreatePubSubAz3
    - Condition: CreatePrivSubTier1Az2
    - Fn::Not:
      - Fn::Equals:
        - Ref: PrivSubTier1Az3Cidr
        - ''
  CreatePrivSubTier2Az1:
    Fn::And:
    - Condition: CreatePrivSubTier1Az1
    - Fn::Not:
      - Fn::Equals:
        - Ref: PrivSubTier2Az1Cidr
        - ''
  CreatePrivSubTier2Az2:
    Fn::And:
    - Condition: CreatePrivSubTier2Az1
    - Condition: CreatePrivSubTier1Az2
    - Fn::Not:
      - Fn::Equals:
        - Ref: PrivSubTier2Az2Cidr
        - ''
  CreatePrivSubTier2Az3:
    Fn::And:
    - Condition: CreatePrivSubTier2Az2
    - Condition: CreatePrivSubTier1Az3
    - Fn::Not:
      - Fn::Equals:
        - Ref: PrivSubTier2Az3Cidr
        - ''
  AddInternetGateway:
    Fn::And:
    - Condition: CreateVpcResources
    - Condition: CreatePrivSubTier1Az1
    - Fn::Equals:
      - Ref: ConnectToInternet
      - true
Resources:
  Vpc:
    Condition: CreateVpcResources
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VpcCidr
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value:
          Ref: AWS::StackName
      - Key: Application
        Value:
          Ref: AWS::StackName
  PubSubAz1:
    Condition: CreateVpcResources
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: Vpc
      CidrBlock:
        Ref: PubSubAz1Cidr
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
      - Key: Name
        Value: Public Subnet AZ1
  PubSubAz2:
    Condition: CreatePubSubAz2
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: Vpc
      CidrBlock:
        Ref: PubSubAz2Cidr
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
      - Key: Name
        Value: Public Subnet AZ2
  PubSubAz3:
    Condition: CreatePubSubAz3
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: Vpc
      CidrBlock:
        Ref: PubSubAz3Cidr
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
      - Key: Name
        Value: Public Subnet AZ3
  PrivSubTier1Az1:
    Condition: CreatePrivSubTier1Az1
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock:
        Ref: PrivSubTier1Az1Cidr
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
      - Key: Name
        Value: Private Subnet Tier1 AZ1
  PrivSubTier1Az2:
    Condition: CreatePrivSubTier1Az2
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock:
        Ref: PrivSubTier1Az2Cidr
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
      - Key: Name
        Value: Private Subnet Tier1 AZ2
  PrivSubTier1Az3:
    Condition: CreatePrivSubTier1Az3
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock:
        Ref: PrivSubTier1Az3Cidr
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
      - Key: Name
        Value: Private Subnet Tier1 AZ3
  PrivSubTier2Az1:
    Condition: CreatePrivSubTier2Az1
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock:
        Ref: PrivSubTier2Az1Cidr
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
      - Key: Name
        Value: Private Subnet Tier2 AZ1
  PrivSubTier2Az2:
    Condition: CreatePrivSubTier2Az2
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock:
        Ref: PrivSubTier2Az2Cidr
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
      - Key: Name
        Value: Private Subnet Tier2 AZ2
  PrivSubTier2Az3:
    Condition: CreatePrivSubTier2Az3
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock:
        Ref: PrivSubTier2Az3Cidr
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs:
            Ref: AWS::Region
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
      - Key: Name
        Value: Private Subnet Tier2 AZ3
  PrivateRouteTableAz1:
    Condition: CreatePrivSubTier1Az1
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
      - Key: Name
        Value: Private AZ1
  PrivateRouteTableAz2:
    Condition: CreatePrivSubTier1Az2
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
      - Key: Name
        Value: Private AZ2
  PrivateRouteTableAz3:
    Condition: CreatePrivSubTier1Az3
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Private
      - Key: Name
        Value: Private AZ3
  PublicSubnetAz1RouteTableAssociation:
    Condition: CreateVpcResources
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PubSubAz1
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetAz2RouteTableAssociation:
    Condition: CreatePubSubAz2
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PubSubAz2
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetAz3RouteTableAssociation:
    Condition: CreatePubSubAz3
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PubSubAz3
      RouteTableId:
        Ref: PublicRouteTable
  PrivateSubnetTier1Az1RouteTableAssociation:
    Condition: CreatePrivSubTier1Az1
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivSubTier1Az1
      RouteTableId:
        Ref: PrivateRouteTableAz1
  PrivateSubnetTier1Az2RouteTableAssociation:
    Condition: CreatePrivSubTier1Az2
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivSubTier1Az2
      RouteTableId:
        Ref: PrivateRouteTableAz2
  PrivateSubnetTier1Az3RouteTableAssociation:
    Condition: CreatePrivSubTier1Az3
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivSubTier1Az3
      RouteTableId:
        Ref: PrivateRouteTableAz3
  PrivateSubnetTier2Az1RouteTableAssociation:
    Condition: CreatePrivSubTier2Az1
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivSubTier2Az1
      RouteTableId:
        Ref: PrivateRouteTableAz1
  PrivateSubnetTier2Az2RouteTableAssociation:
    Condition: CreatePrivSubTier2Az2
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivSubTier2Az2
      RouteTableId:
        Ref: PrivateRouteTableAz2
  PrivateSubnetTier2Az3RouteTableAssociation:
    Condition: CreatePrivSubTier2Az3
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivSubTier2Az3
      RouteTableId:
        Ref: PrivateRouteTableAz3
  InternetGateway:
    Condition: AddInternetGateway
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
      - Key: Name
        Value:
          Ref: AWS::StackName
  GatewayToInternet:
    Condition: AddInternetGateway
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc
      InternetGatewayId:
        Ref: InternetGateway
  PublicRouteTable:
    Condition: CreateVpcResources
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
      - Key: Name
        Value: Public
  PublicRoute:
    Condition: AddInternetGateway
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  DefaultRouteAz1:
    Condition: CreatePrivSubTier1Az1
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableAz1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGw1
  DefaultRouteAz2:
    Condition: CreatePrivSubTier1Az2
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableAz2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGw2
  DefaultRouteAz3:
    Condition: CreatePrivSubTier1Az3
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableAz3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGw3
  Eip1:
    Condition: CreatePrivSubTier1Az1
    DependsOn: GatewayToInternet
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGw1:
    Condition: CreatePrivSubTier1Az1
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - Eip1
        - AllocationId
      SubnetId:
        Ref: PubSubAz1
  Eip2:
    Condition: CreatePrivSubTier1Az2
    DependsOn: GatewayToInternet
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGw2:
    Condition: CreatePrivSubTier1Az2
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - Eip2
        - AllocationId
      SubnetId:
        Ref: PubSubAz2
  Eip3:
    Condition: CreatePrivSubTier1Az3
    DependsOn: GatewayToInternet
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGw3:
    Condition: CreatePrivSubTier1Az3
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - Eip3
        - AllocationId
      SubnetId:
        Ref: PubSubAz3
Outputs:
  VpcId:
    Condition: CreateVpcResources
    Description: ID of the VPC
    Value:
      Ref: Vpc
  PubSubAz1Id:
    Condition: CreateVpcResources
    Description: ID of the Public Subnet in AZ1
    Value:
      Ref: PubSubAz1
  PubSubAz2Id:
    Condition: CreatePubSubAz2
    Description: ID of the Public Subnet in AZ2
    Value:
      Ref: PubSubAz2
  PubSubAz3Id:
    Condition: CreatePubSubAz3
    Description: ID of the Public Subnet in AZ3
    Value:
      Ref: PubSubAz3
  PrivSubTier1Az1Id:
    Condition: CreatePrivSubTier1Az1
    Description: ID of the Private Tier1 Subnet in AZ1
    Value:
      Ref: PrivSubTier1Az1
  PrivSubTier1Az2Id:
    Condition: CreatePrivSubTier1Az2
    Description: ID of the Private Tier1 Subnet in AZ2
    Value:
      Ref: PrivSubTier1Az2
  PrivSubTier1Az3Id:
    Condition: CreatePrivSubTier1Az3
    Description: ID of the Private Tier1 Subnet in AZ3
    Value:
      Ref: PrivSubTier1Az3
  PrivSubTier2Az1Id:
    Condition: CreatePrivSubTier2Az1
    Description: ID of the Private Tier2 Subnet in AZ1
    Value:
      Ref: PrivSubTier2Az1
  PrivSubTier2Az2Id:
    Condition: CreatePrivSubTier2Az2
    Description: ID of the Private Tier2 Subnet in AZ2
    Value:
      Ref: PrivSubTier2Az2
  PrivSubTier2Az3Id:
    Condition: CreatePrivSubTier2Az3
    Description: ID of the Private Tier2 Subnet in AZ3
    Value:
      Ref: PrivSubTier2Az3
  NatGw1Eip:
    Condition: CreatePrivSubTier1Az1
    Description: Public Elastic IP of NAT Gateway in AZ1
    Value:
      Ref: Eip1
  NatGw2Eip:
    Condition: CreatePrivSubTier1Az2
    Description: Public Elastic IP of NAT Gateway in AZ2
    Value:
      Ref: Eip2
  NatGw3Eip:
    Condition: CreatePrivSubTier1Az3
    Description: Public IP Elastic of NAT Gateway in AZ3
    Value:
      Ref: Eip3
